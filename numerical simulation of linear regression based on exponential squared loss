##### numerical simulation of linear regression based on exponential squared loss #####
# construct a linear model Yi=Xi*beta_i+epsilon_i
n = 20
beta <- c(2,1)
result_ex <- list()
result_OLS <- matrix(NA, nrow = 1000, ncol = 2)
result_CQR <- matrix(NA, nrow = 1000, ncol = 2)
for (k in 1:1000) {
  result <- list()
  
  X1 <- rnorm(n, 0, 1)
  X2 <- rnorm(n, 0, 1)
  X <- cbind(X1, X2)
  epsilon <- rnorm(n, 0, 0.2)
  Y = X%*%beta+epsilon 
  
  ### step I: compute beta_est by using CQR
  # load necessary packages
  library(quantreg)
  
  # compute coe. using CQR
  fit1 = rq(Y~X[,1]+X[,2], tau=1:9/10)
  # show coe.of beta
  coef(fit1)
  # choose the coeficients on tau=0.5 as beta_wave
  beta_wave <- coef(fit1)[2:3,5]
  result_CQR[k,] <- beta_wave
  # OLS coeficients
  result_OLS[k,] <- solve(t(X)%*%X)%*%t(X)%*%Y
  
  ### step II: choose tunning parameter h 
  # estimate epsilon_wave 
  epsilon_wave <- Y-X%*%beta_wave        
  # estimate var(epsilon)
  var_epsilon_wave <- mean((epsilon_wave)^2)
  # program function of estimator of r(h)
  r_wave_of_h <-function(h){
    # estimator of G(h)
    n_G_wave_of_h<-c()
    for (i in 1:n) {
      n_G_wave_of_h[i] <- (4/h^2)*epsilon_wave[i]*exp(-(epsilon_wave[i])^2/h)
    }
    G_wave_of_h <- (mean(n_G_wave_of_h))^2
    
    # estimator of F(h) 
    n_F_wave_of_h<-c()
    for (i in 1:n) {
      n_F_wave_of_h[i] <- (4/h^2)*exp(-(epsilon_wave[i])^2/h)*((epsilon_wave[i])^2-(h/2))
    }
    F_wave_of_h <- (mean(n_G_wave_of_h))^2
    
    # estimator of r(h)
    return(G_wave_of_h*(F_wave_of_h)^(-2)/var_epsilon_wave)
  }
  # compute optimal h which makes estimator of r(h) the least
  r <- c()
  for (j in 0:100) {
    r[j] <- r_wave_of_h(0.5*(var_epsilon_wave)^(1/2)*1.02^j)
  }
  z <- which.min(r)
  h_opt <- 0.5*(var_epsilon_wave)^(1/2)*1.02^z
  
  ### step III: minimize objective function 
  obj_function <- function(B){
    L <-c()
    for (i in 1:20) {
      L[i] <- exp(-(Y[i]-X[i,]%*%B)^2/h_opt)
    }
    return(-sum(L))
  }
  
  # tset the ovjective funtion 
  B=c(1.9969827,0.9767281)
  obj_function(B)
  # optimize the objective function 
  result_ex[k] <- optim(par = beta_wave, fn=obj_function, method = "L-BFGS-B")[1]
}
result <- list(result_CQR, result_OLS, result_ex)

result[1]
result[2]
result[3]
